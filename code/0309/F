#include<iostream>
#include<vector>
#include<algorithm>
#define ll long long
 
using namespace std;
 
bool cmp(pair<ll, ll> a, pair<ll, ll> b) {
	return a.first < b.first;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	ll n, k;
	vector< vector <pair<ll, ll> > > cost,dp;
	cin >> n >> k;
	for (int i = 0; i < n; i++) {
		vector <pair<ll, ll> >p;
		for (int j = 0, cst; j < k; j++) {
			cin >> cst;
			p.push_back({ cst,j });
		}
		cost.push_back(p);
	}
	dp = cost;
	ll sum1 = cost[0][0].first, sum2 = cost[0][1].first;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < k; j++) {
			if (i == 0) dp[i][j] = cost[i][j];
			else {
				if (cost[i][j].second == dp[i-1][0].second) {
					dp[i][j].first = cost[i][j].first + dp[i - 1][1].first;
				}
				else {
					dp[i][j].first = cost[i][j].first + dp[i - 1][0].first;
				}
			}
		}
		sort(dp[i].begin(), dp[i].end(), cmp);
	}
	cout << dp[n-1][0].first << "\n";
	return 0;
}
